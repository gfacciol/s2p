language: python
sudo: required
fast_finish: true

matrix:
  include:
    - os: linux
      dist: trusty
      python: 2.7
      env: CPLUS_INCLUDE_PATH=/usr/include/gdal C_INCLUDE_PATH=/usr/include/gdal
    - os: linux
      dist: trusty
      python: 3.5
      env: CPLUS_INCLUDE_PATH=/usr/include/gdal C_INCLUDE_PATH=/usr/include/gdal
    - os: osx
      language: generic
      python: 3.4
      env: PYTHON=3.6.4
      env: PATH=/Library/Frameworks/GDAL.framework/Versions/2.1/unix/bin:$PATH

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo rm -vf /etc/apt/sources.list.d/*riak*; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-add-repository -y ppa:ubuntugis/ppa; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -qq update; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install gdal-bin libfftw3-dev libgdal-dev libgeotiff-dev geographiclib-tools libgeographiclib-dev; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update && brew install python3 && brew unlink gdal &&  (brew install gcc || brew link --overwrite gcc) &&  brew install geographiclib fftw libgeotiff; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew update
      # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
      brew install openssl readline
      # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
      # I didn't do this above because it works and I'm lazy.
      brew outdated pyenv || brew upgrade pyenv
      # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
      # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
      brew install pyenv-virtualenv
      pyenv install $PYTHON
      # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
      # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
      # modify the Bash environment. ??? So, I hand-set the variables instead.
      export PYENV_VERSION=$PYTHON
      export PATH="/Users/travis/.pyenv/shims:${PATH}"
      pyenv-virtualenv venv
      source venv/bin/activate
      # A manual check that the correct version of Python is running.
      python --version
    fi
    
install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pip install numpy utm bs4 requests; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pip install GDAL==$(gdal-config --version | awk -F'[.]' '{print $1"."$2}'); fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then pip3 install numpy utm bs4 requests; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget http://www.kyngchaos.com/files/software/frameworks/GDAL_Complete-2.1.dmg; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then X=$(echo `hdiutil mount GDAL_Complete-2.1.dmg | tail -1 | awk '{$1=$2=""; print $0}'` | xargs -0 echo) && sudo installer -pkg "${X}/"GDAL\ Complete.pkg -target /; export PATH="/Library/Frameworks/GDAL.framework/Programs:$PATH"; fi

script:
  - make
  - make test
